package Latte.Absyn; // Java Package generated by the BNF Converter.

import Latte.Env;

import java.util.LinkedList;

public class EOr extends Expr {
  public final Expr expr_1, expr_2;

  public EOr(Expr p1, Expr p2) { expr_1 = p1; expr_2 = p2; }

  public <R,A> R accept(Latte.Absyn.Expr.Visitor<R,A> v, A arg) { return v.visit(this, arg); }


    @Override
    public String returnType(LinkedList<Env> envs) {
        String type1 = expr_1.returnType(envs);
        String type2 = expr_2.returnType(envs);
        if (type1 == type2) return type1; return null;
        //else
          //  throw new IllegalArgumentException("Not compatible operands in line");
    }


    public boolean equals(Object o) {
    if (this == o) return true;
    if (o instanceof Latte.Absyn.EOr) {
      Latte.Absyn.EOr x = (Latte.Absyn.EOr)o;
      return this.expr_1.equals(x.expr_1) && this.expr_2.equals(x.expr_2);
    }
    return false;
  }

  public int hashCode() {
    return 37*(this.expr_1.hashCode())+this.expr_2.hashCode();
  }


}
