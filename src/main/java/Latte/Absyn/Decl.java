package Latte.Absyn; // Java Package generated by the BNF Converter.

import Latte.Env;
import Latte.Exceptions.TypeException;

public class Decl extends Stmt {
    public final Type type_;
    public final ListItem listitem_;

    public Decl(Type p1, ListItem p2) { type_ = p1; listitem_ = p2; }

    public <R,A> R accept(Latte.Absyn.Stmt.Visitor<R,A> v, A arg) throws Exception { return v.visit(this, arg); }

    @Override
    public boolean functionsReturnAchievibility() {
        return false;
    }

    @Override
    public void checkTypes(Env env, String currentFunction) throws TypeException {
        for(Item item: listitem_){
            item.checkTypes(env, currentFunction, type_);
        }
    }


    public boolean equals(Object o) {
        if (this == o) return true;
        if (o instanceof Latte.Absyn.Decl) {
            Latte.Absyn.Decl x = (Latte.Absyn.Decl)o;
            return this.type_.equals(x.type_) && this.listitem_.equals(x.listitem_);
        }
        return false;
    }

    public int hashCode() {
        return 37*(this.type_.hashCode())+this.listitem_.hashCode();
    }


}
